--- a/initd/init.c
+++ b/initd/init.c
@@ -84,7 +84,7 @@ main(int argc, char **argv)
 
 	early();
 	cmdline();
-	watchdog_init(1);
+	//watchdog_init(1);
 
 	pid = fork();
 	if (!pid) {
--- a/state.c
+++ b/state.c
@@ -42,14 +42,14 @@ static void state_enter(void)
 	switch (state) {
 	case STATE_EARLY:
 		LOG("- early -\n");
-		watchdog_init(0);
+		//watchdog_init(0);
 		hotplug("/etc/hotplug.json");
 		procd_coldplug();
 		break;
 
 	case STATE_INIT:
 		// try to reopen incase the wdt was not available before coldplug
-		watchdog_init(0);
+		//watchdog_init(0);
 		LOG("- ubus -\n");
 		procd_connect_ubus();
 
--- a/system.c
+++ b/system.c
@@ -236,6 +236,7 @@ static const struct blobmsg_policy watch
 	[WDT_STOP] = { .name = "stop", .type = BLOBMSG_TYPE_BOOL },
 };
 
+/*
 static int watchdog_set(struct ubus_context *ctx, struct ubus_object *obj,
 			struct ubus_request_data *req, const char *method,
 			struct blob_attr *msg)
@@ -285,6 +286,7 @@ static int watchdog_set(struct ubus_cont
 
 	return 0;
 }
+*/
 
 enum {
 	SIGNAL_PID,
@@ -334,7 +336,7 @@ procd_spawn_upgraded(char *path)
 
 	DEBUG(2, "Exec to upgraded now\n");
 	if (wdt_fd) {
-		watchdog_no_cloexec();
+		//watchdog_no_cloexec();
 		setenv("WDTFD", wdt_fd, 1);
 	}
 	execvp(argv[0], argv);
@@ -369,7 +371,7 @@ static const struct ubus_method system_m
 	UBUS_METHOD_NOARG("board", system_board),
 	UBUS_METHOD_NOARG("info",  system_info),
 	UBUS_METHOD_NOARG("upgrade", system_upgrade),
-	UBUS_METHOD("watchdog", watchdog_set, watchdog_policy),
+	//UBUS_METHOD("watchdog", watchdog_set, watchdog_policy),
 	UBUS_METHOD("signal", proc_signal, signal_policy),
 
 	/* must remain at the end as it ia not always loaded */
--- a/upgraded/upgraded.c
+++ b/upgraded/upgraded.c
@@ -67,7 +67,7 @@ int main(int argc, char **argv)
 	}
 
 	uloop_init();
-	watchdog_init(0);
+	//watchdog_init(0);
 	sysupgarde(argv[1]);
 	uloop_run();
 
